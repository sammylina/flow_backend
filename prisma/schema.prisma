// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  passwordHash    String
  language        String    // e.g., "fr", "es", "en"
  coins           Int       @default(0)
  isPaid          Boolean   @default(false)
  progress        LessonProgress[]
  purchases       Purchase[]
  coinTransactions CoinTransaction[]

  @@map("users")
}

model Task {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("tasks")
}

model LessonProgress {
  id        Int      @id @default(autoincrement())
  userId    Int
  lessonId  String
  completed Boolean  @default(false)
  score     Int?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, lessonId])
  @@map("lesson_progress")
}

model Purchase {
  id        Int      @id @default(autoincrement())
  userId    Int
  itemType  String   // e.g., "premium", "coins", "course"
  itemId    String?
  amount    Decimal
  currency  String   @default("USD")
  status    String   @default("pending") // pending, completed, failed
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("purchases")
}

model CoinTransaction {
  id          Int      @id @default(autoincrement())
  userId      Int
  amount      Int      // positive for earning, negative for spending
  type        String   // e.g., "earned", "spent", "purchased", "bonus"
  description String?
  createdAt   DateTime @default(now()) @map("created_at")

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("coin_transactions")
}
